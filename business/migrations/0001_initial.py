# Generated by Django 4.2.5 on 2025-07-26 13:05

import business.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Org',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=180, verbose_name='Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_kyo', models.BooleanField(default=False, verbose_name='Verified')),
                ('msg', models.TextField(blank=True, null=True, verbose_name='Message')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrgDoc',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('reg_no', models.CharField(max_length=256, unique=True, verbose_name='Document No')),
                ('doc', models.FileField(blank=True, upload_to=business.models.upload_to_org, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])], verbose_name='Document')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_valid', models.BooleanField(default=False, verbose_name='Valid')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrgDocType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doc', models.CharField(max_length=90, verbose_name='Document')),
                ('doc_no', models.CharField(max_length=120, verbose_name='Document Number')),
                ('desc', models.TextField()),
                ('is_doc', models.BooleanField(default=False, verbose_name='Document Required')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrgType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entity', models.CharField(max_length=30, verbose_name='Entity')),
                ('is_doc1', models.BooleanField(default=False, verbose_name='Primary Document')),
                ('doc_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business.orgdoctype', verbose_name='Document')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrgEmp',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('join_date', models.DateField(verbose_name='Joining Date')),
                ('is_mng', models.BooleanField(default=False, verbose_name='Manager')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business.org', verbose_name='Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
